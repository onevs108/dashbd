<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.catenoid.dashbd.dao.OperatorMapper" >
  <resultMap id="BaseResultMap" type="com.catenoid.dashbd.dao.model.Operator" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="name" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, circle_name, description, created_at, updated_at
  </sql>
  <sql id="Circle_Column_List" >
    id, circle_name, town_name, town_code, latitude, longitude, description, created_at as createdAt, updated_at as updatedAt
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.catenoid.dashbd.dao.model.OperatorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />, permission
    from operator
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteGrade" parameterType="java.lang.Integer" >
    delete from grade
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteCircle" parameterType="java.lang.Integer" >
    delete from operator
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.catenoid.dashbd.dao.model.OperatorExample" >
    delete from operator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.catenoid.dashbd.dao.model.Operator" >
    insert into operator (id, name, created_at, 
      updated_at)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.catenoid.dashbd.dao.model.Operator" >
    insert into operator
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.catenoid.dashbd.dao.model.OperatorExample" resultType="java.lang.Integer" >
    select count(*) from operator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update operator
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>      
        updated_at = now(),
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update operator
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = now()
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.catenoid.dashbd.dao.model.Operator" >
    update operator
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = now(),
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.catenoid.dashbd.dao.model.Operator" >
    update operator
    set name = #{name,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  
	<select id="selectCircleListAll" resultType="com.catenoid.dashbd.dao.model.Circle">
		SELECT circle_id, circle_name, description, latitude, longitude, sort
		FROM circle
		ORDER BY sort
	</select>
	
	<select id="selectCircleListNameAll" resultType="com.catenoid.dashbd.dao.model.Circle">
		SELECT circle_id, circle_name, description, latitude, longitude, sort
		FROM circle
		ORDER BY circle_name
	</select>
  
	<select id="selectTownListAll" resultType="com.catenoid.dashbd.dao.model.Circle">
		SELECT id, circle_name, town_name, town_code, latitude, longitude, description, permission, created_at as createdAt, updated_at as updatedAt
		FROM operator
		ORDER BY length(circle_name) ASC, circle_name ASC
	</select>
	
	<select id="selectCityFromCircle" parameterType="HashMap" resultType="HashMap">
		SELECT 
			city_id, circle_name, city_name, city_code, latitude, longitude, description, bandwidth, created_at as createdAt, updated_at as updatedAt
		FROM ( SELECT
				   @ROWNUM := @ROWNUM + 1 AS rownum,
				   city_id, circle_name, city_name, city_code, latitude, longitude, description, bandwidth, created_at, updated_at
			   FROM ( SELECT @ROWNUM := 0 AS rownum) R,
					( SELECT
						 city_id, circle_name, city_name, city_code, latitude, longitude, description, bandwidth, created_at, updated_at
					  FROM city
					  WHERE circle_name = #{circleName}
					  ORDER BY <if test="sort == null">city_id ASC</if>
					  		   <if test="sort != null">
					  		       <if test="sort == 'town_name'">city_name</if>
					  		       <if test="sort == 'description'">description</if>
					  		       ${order}
					  		   </if> ) T
			 ) R
		WHERE rownum BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectOperatorFromCircle" parameterType="HashMap" resultType="HashMap">
		SELECT 
			id, circle_name, town_name, description, permission, created_at, updated_at
		FROM ( SELECT
				   @ROWNUM := @ROWNUM + 1 AS rownum,
				   id, circle_name, town_name, description, permission, created_at, updated_at
			   FROM ( SELECT @ROWNUM := 0 AS rownum) R,
					( SELECT
						 id, circle_name, town_name, description, permission, created_at, updated_at
					  FROM operator
					  WHERE circle_name = #{circleName}
					  ORDER BY <if test="sort == null">id ASC</if>
					  		   <if test="sort != null">
					  		       <if test="sort == 'town_name'">town_name</if>
					  		       <if test="sort == 'description'">description</if>
					  		       ${order}
					  		   </if> ) T
			 ) R
		WHERE rownum BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectOperatorFromCircleCount" parameterType="Map" resultType="Integer">
		SELECT
			COUNT(*)
		FROM operator
		WHERE circle_name = #{circleName}
		ORDER BY length(circle_name) ASC, circle_name ASC
	</select>
	
	<select id="selectGradeListAll" resultType="com.catenoid.dashbd.dao.model.Operator">
		SELECT 
			id,
			name,
			description,
			permission,
			created_at AS createdAt,
			updated_at AS updatedAt
		FROM grade
		ORDER BY id ASC
	</select>
	
	<select id="selectGradeList" parameterType="Map" resultType="com.catenoid.dashbd.dao.model.Operator">
		SELECT 
			id,
			name,
			description,
			permission,
			created_at AS createdAt,
			updated_at AS updatedAt
		FROM ( SELECT
				   @ROWNUM := @ROWNUM + 1 AS rownum,
				   id, name, description, permission, created_at, updated_at
			   FROM ( SELECT @ROWNUM := 0 AS rownum) R,
					( SELECT
						 id, name, description, permission, created_at, updated_at
					  FROM grade
					  WHERE id != 9999
					  ORDER BY <if test="sort == null">id ASC</if>
					  		   <if test="sort != null">
					  		       <if test="sort == 'name'">name</if>
					  		       <if test="sort == 'description'">description</if>
					  		       ${order}
					  		   </if> ) T
			 ) R
		WHERE rownum BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectOperatorList" parameterType="Map" resultType="com.catenoid.dashbd.dao.model.Operator">
		SELECT
			id,
			name,
			description,
			created_at AS createdAt,
			updated_at AS updatedAt
		FROM ( SELECT
				   @ROWNUM := @ROWNUM + 1 AS rownum,
				   id, name, description, created_at, updated_at
			   FROM ( SELECT @ROWNUM := 0 AS rownum) R,
					( SELECT
						 id, name, description, created_at, updated_at
					  FROM operator
					  ORDER BY <if test="sort == null">name ASC</if>
					  		   <if test="sort != null">
					  		       <if test="sort == 'name'">name</if>
					  		       <if test="sort == 'description'">description</if>
					  		       ${order}
					  		   </if> ) T
			 ) R
		WHERE rownum BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectCircleListCount" parameterType="Map" resultType="Integer">
		SELECT
			COUNT(*)
		FROM operator
		ORDER BY length(name) ASC, name ASC
	</select>
	
	<select id="getGradeListCount" resultType="Integer">
		SELECT
			COUNT(*)
		FROM grade
		ORDER BY length(name) ASC, name ASC
	</select>
	
	<select id="selectByGradeName" parameterType="String" resultType="com.catenoid.dashbd.dao.model.Operator">
	    SELECT
	    	id,
			name,
			description,
			permission,
			created_at AS createdAt,
			updated_at AS updatedAt
		FROM grade
		WHERE name = #{operatorName}
	</select>
	
	<select id="selectByOperatorName" parameterType="String" resultType="com.catenoid.dashbd.dao.model.Operator">
	    SELECT
	    	id, circle_name AS circleName, town_name AS name, town_code, latitude, longitude, description, permission, created_at as createdAt, updated_at as updatedAt
		FROM operator
		WHERE town_name = #{operatorName}
	</select>
	
	<insert id="insertOperator" parameterType="com.catenoid.dashbd.dao.model.Operator" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO operator(<if test="id != null">`id`,</if>circle_name, town_name, `description`, permission, `created_at`, `updated_at`)
		VALUES (<if test="id != null">#{id},</if>#{circleName}, #{name}, #{description}, #{permission}, NOW(), NOW())
		ON DUPLICATE KEY UPDATE
		circle_name = #{circleName}, town_name = #{name}, description = #{description}, permission = #{permission}, updated_at = NOW()
	</insert>
	
	<insert id="insertGrade" parameterType="com.catenoid.dashbd.dao.model.Operator" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO grade(<if test="id != null">`id`,</if>`name`, `description`, permission, `created_at`, `updated_at`)
		VALUES (<if test="id != null">#{id},</if>#{name}, #{description}, #{permission}, NOW(), NOW())
		ON DUPLICATE KEY UPDATE
		name = #{name}, description = #{description}, permission = #{permission}, updated_at = NOW()
	</insert>
	
	<delete id="deleteOperator" parameterType="com.catenoid.dashbd.dao.model.Operator">
		DELETE FROM operator
		WHERE id = #{id}
	</delete>
	
	<select id="selectMemberList" parameterType="HashMap" resultType="com.catenoid.dashbd.dao.model.Users">
		SELECT 
			id, userId, circleName, operatorName, password, firstName, lastName, department, grade, gradeName, permission, memo, createdAt, updatedAt
		FROM ( SELECT
				   @ROWNUM := @ROWNUM + 1 AS rownum,
				   id, userId, circleName, operatorName, password, firstName, lastName, department, grade, gradeName, permission, memo, createdAt, updatedAt
			   FROM ( SELECT @ROWNUM := 0 AS rownum) R,
					( SELECT  id
							, user_id AS userId
							, operator_id AS operatorId
							, (select circle_name from operator where id = users.operator_id) as circleName
							, (select town_name from operator where id = users.operator_id) as operatorName
							, password								
							, first_name AS firstName		
							, last_name	AS lastName				
							, department								
							, grade							
							, (select name from grade where id = users.grade) as gradeName	
							, permission								
							, memo								
							, created_at AS createdAt							
							, updated_at AS updatedAt			
						FROM users users
						WHERE user_id != 'admin'
						<choose>
							<when test="targetDiv == 'grade'">
								<if test="grade != '' and grade != null">
									AND grade = #{grade}
								</if>
								<if test="notGrade != '' and notGrade != null">
									AND (grade != #{notGrade} OR grade is null)
								</if>
							</when>
							<when test="targetDiv == 'operator'">
								<if test="operatorId != '' and operatorId != null">
									AND operator_id = #{operatorId}
								</if>
								<if test="notOperatorId != '' and notOperatorId != null">
									AND (operator_id != #{notOperatorId} OR operator_id is null)
								</if>
							</when>
						</choose>
						<if test="searchGrade != '' and searchGrade != null">
							AND grade = #{searchGrade}
						</if>
						<if test="searchInput != '' and searchInput != null">
							<choose>
								<when test="searchDiv == 'id'">
									AND user_id LIKE CONCAT('%', #{searchInput}, '%')
								</when>
								<when test="searchDiv == 'name'">
									AND (first_name LIKE CONCAT('%', #{searchInput}, '%') OR last_name LIKE CONCAT('%', #{searchInput}, '%'))
								</when>
								<when test="searchDiv == 'department'">
									AND department LIKE CONCAT('%', #{searchInput}, '%')
								</when>
							</choose>
						</if>
					  ORDER BY <if test="sort == null">user_id</if>
					  		   <if test="sort != null">
					  		       <if test="sort == 'circleName'">city_name</if>
					  		       <if test="sort == 'townName'">grade, operator_id</if>
					  		       <if test="sort == 'userId'">user_id</if>
					  		       <if test="sort == 'lastName'">last_name</if>
					  		       <if test="sort == 'firstName'">first_name</if>
					  		       <if test="sort == 'department'">department</if>
					  		       ${order}
					  		   </if> ) T
			 ) R
		<if test="start != null and start != ''">
			WHERE rownum BETWEEN #{start} AND #{end}
		</if>
	</select>
	
	<select id="getMemberListCount" parameterType="HashMap" resultType="int">
		SELECT  count(user_id)			
		FROM users users
		WHERE user_id != 'admin'
		<choose>
			<when test="targetDiv == 'grade'">
				<if test="grade != '' and grade != null">
					AND grade = #{grade}
				</if>
				<if test="notGrade != '' and notGrade != null">
					AND (grade != #{notGrade} OR grade is null)
				</if>
			</when>
			<when test="targetDiv == 'operator'">
				<if test="operatorId != '' and operatorId != null">
					AND operator_id = #{operatorId}
				</if>
				<if test="notOperatorId != '' and notOperatorId != null">
					AND (operator_id != #{notOperatorId} OR operator_id is null)
				</if>
			</when>
		</choose>
		<if test="searchGrade != '' and searchGrade != null">
			AND grade = #{searchGrade}
		</if>
		<if test="searchInput != '' and searchInput != null">
			<choose>
				<when test="searchDiv == 'id'">
					AND user_id LIKE CONCAT('%', #{searchInput}, '%')
				</when>
				<when test="searchDiv == 'name'">
					AND (first_name LIKE CONCAT('%', #{searchInput}, '%') OR last_name LIKE CONCAT('%', #{searchInput}, '%'))
				</when>
				<when test="searchDiv == 'department'">
					AND department LIKE CONCAT('%', #{searchInput}, '%')
				</when>
			</choose>
		</if>
	</select>
	
</mapper>