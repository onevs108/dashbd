<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	
	<util:properties id="config" location="classpath:config.properties" />
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
		<property name="maxUploadSize" value="30720000" />
	</bean>
	
	<bean id="fileUploader" class="com.catenoid.dashbd.UploadController">
		<property name="uploadDir" value="../uploadFiles" />
	</bean>
		
	<import resource="mybatis/mybatis-context.xml" />
	<import resource="security/security-context.xml" />
	
	<!-- 1. Cron 대상이 되는 클래스 정의 -->
	<bean id="sessionEMBMS" class="org.springframework.scheduling.quartz.JobDetailBean">
	    <property name="jobClass" value="com.catenoid.dashbd.scheduling.QuartzEmbmsSession"/>
 	    <property name="jobDataAsMap">
			<map>
				<entry key="init" value-ref="sqlSessionTemplate"/>
			</map>
		</property>
	</bean>

	<bean id="dbBackupCron" class="org.springframework.scheduling.quartz.JobDetailBean">
	    <property name="jobClass" value="com.catenoid.dashbd.scheduling.DbBackupCron"/>
	    <property name="jobDataAsMap">
			<map>
				<entry key="init" value-ref="sqlSessionTemplate"/>
			</map>
		</property>
	</bean>
	
	<!-- 2. Cron 시간 설정 -->
<!--  	 ** 참조 : Quartz 시간 expression * * * * * ? (*) : 초 분 시 일 월 요일 (년) -->
	<bean id="cronTriggerSessionEMBMS" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="sessionEMBMS"/>
	    <property name="cronExpression" value="0 */1 * * * ?"/> <!-- 매 30초마다 (for test) --> 
	</bean>
	
	<bean id="dbBackupTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="dbBackupCron"/>
	    <property name="cronExpression" value="0/30 * * * * ?"/>	<!-- 매 1분마다 (for test)  -->
<!-- 	    <property name="cronExpression" value="0 */1 * * * ?"/>	매 1분마다 (for test)  -->
	</bean>
	
	<!-- 3. Cron 실행 -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	    <property name="triggers">
	        <list>
	            <!-- <ref bean="cronTriggerSessionEMBMS"/> -->
	            <ref bean="dbBackupTrigger"/>
	        </list>
	    </property>
	    <property name="quartzProperties">
	        <props>
	            <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
	            <prop key="org.quartz.threadPool.threadCount">3</prop>
	            <prop key="org.quartz.threadPool.threadPriority">4</prop>
	            <prop key="org.quartz.jobStore.class">org.quartz.simpl.RAMJobStore</prop>
	            <prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
	        </props>
	    </property>
	</bean>
</beans>

