<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.catenoid.dashbd.dao.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.catenoid.dashbd.dao.model.Users" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="operator_id" property="operatorId" jdbcType="INTEGER" />
    <result column="operator_name" property="operatorName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="first_name" property="firstName" jdbcType="VARCHAR" />
    <result column="last_name" property="lastName" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
    <result column="grade_name" property="gradeName" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="fail_cnt" property="failCnt" jdbcType="VARCHAR" />
    <result column="circle_id" property="circleId" jdbcType="VARCHAR" />
    <result column="circle_name" property="circleName" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="and" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="or" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  or ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  or ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  or ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  or ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, operator_id, password, first_name, last_name, department, grade, memo, status, fail_cnt, created_at, updated_at
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.catenoid.dashbd.dao.model.UsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitByClause != null" >
      limit ${limitByClause}
    </if>
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
  </select>
  
	<select id="selectUserList" resultMap="BaseResultMap" parameterType="Map">
	    SELECT
	    	id, user_id, ifnull(operator_id, '') as operator_id, ifnull(operator_name, '') as operator_name, password, first_name, last_name, department, 
	    	grade, created_at, updated_at, (select name from grade where id = grade) as grade_name
    	FROM ( SELECT
				   @ROWNUM := @ROWNUM + 1 AS rownum,
				   id, user_id, operator_id, operator_name, password, first_name, last_name, department, grade, created_at, updated_at
			   FROM ( SELECT @ROWNUM := 0 AS rownum) R,
					( SELECT
						 U.id, U.user_id, U.operator_id, U.password, U.first_name, U.last_name, U.department, U.grade, U.created_at, U.updated_at,
						 O.circle_name AS operator_name, (select name from grade where id = U.grade) as grade_name
					  FROM users U LEFT JOIN operator O ON U.operator_id = O.id
					  <choose>
					      <when test="searchKeyword != null">
					          <if test="searchColumn.equals('all')">
					              WHERE ( ( first_name LIKE CONCAT('%', #{searchKeyword}, '%') OR last_name LIKE CONCAT('%', #{searchKeyword}, '%') )
								          OR user_id LIKE CONCAT('%', #{searchKeyword}, '%')
								          OR department LIKE CONCAT('%', #{searchKeyword}, '%') )
								  <if test="operatorId != null">
									  AND grade = #{operatorId}
								  </if>
								  <if test="searchCircleId != null">
								  	AND O.circle_name = #{searchCircleId}
								  </if>
							  </if>
							  <if test="searchColumn.equals('name')">
							  	  WHERE ( first_name LIKE CONCAT('%', #{searchKeyword}, '%') OR last_name LIKE CONCAT('%', #{searchKeyword}, '%') )
								  <if test="operatorId != null">
									  AND grade = #{operatorId}
								  </if>
								  <if test="searchCircleId != null">
								  	AND O.circle_name = #{searchCircleId}
								  </if>
							  </if>
							  <if test="searchColumn.equals('userId')">
							  	  WHERE user_id LIKE CONCAT('%', #{searchKeyword}, '%')
								  <if test="operatorId != null">
									  AND grade = #{operatorId}
								  </if>
								  <if test="searchCircleId != null">
								  	AND O.circle_name = #{searchCircleId}
								  </if>
							  </if>
							  <if test="searchColumn.equals('department')">
							  	  WHERE department LIKE CONCAT('%', #{searchKeyword}, '%')
							  	  <if test="operatorId != null">
									  AND grade = #{operatorId}
								  </if>
								  <if test="searchCircleId != null">
								  	AND O.circle_name = #{searchCircleId}
								  </if>
							  </if>
					      </when>
					      <otherwise>
					          <if test="operatorId != null">
					              WHERE grade = #{operatorId}
					          </if>
					          <if test="searchCircleId != null">
							  	AND O.circle_name = #{searchCircleId}
							  </if>
					      </otherwise>
					  </choose>
					  ORDER BY <if test="sort == null">grade ASC</if>
					  		   <if test="sort != null">
					  		       <if test="sort == 'gradeName'">grade_name</if>
					  		       <if test="sort == 'operatorName'">O.circle_name</if>
					  		       <if test="sort == 'userId'">U.user_id</if>
					  		       <if test="sort == 'firstName'">U.first_name</if>
					  		       <if test="sort == 'lastName'">U.last_name</if>
					  		       <if test="sort == 'department'">U.department</if>
					  		       ${order}
					  		   </if> ) T
					  WHERE user_id != 'admin'
			  ) R
		WHERE rownum BETWEEN #{start} AND #{end}
		
	</select>
	
	<select id="selectUserListCount" resultType="Integer" parameterType="Map">
	    SELECT COUNT(U.user_id)
		FROM users U LEFT JOIN operator O ON U.operator_id = O.id
		WHERE user_id != 'admin'
		<choose>
			<when test="searchKeyword != null">
				<if test="searchColumn.equals('all')">
					AND ( ( first_name LIKE CONCAT('%', #{searchKeyword}, '%') OR last_name LIKE CONCAT('%', #{searchKeyword}, '%') )
							OR user_id LIKE CONCAT('%', #{searchKeyword}, '%')
							OR department LIKE CONCAT('%', #{searchKeyword}, '%') )
					<if test="operatorId != null">
						AND grade = #{operatorId}
					</if>
					<if test="searchCircleId != null">
					  	AND O.circle_name = #{searchCircleId}
					</if>
				</if>
				<if test="searchColumn.equals('name')">
					AND ( first_name LIKE CONCAT('%', #{searchKeyword}, '%') OR last_name LIKE CONCAT('%', #{searchKeyword}, '%') )
					<if test="operatorId != null">
						AND grade = #{operatorId}
					</if>
					<if test="searchCircleId != null">
					  	AND O.circle_name = #{searchCircleId}
					</if>
				</if>
				<if test="searchColumn.equals('userId')">
					AND user_id LIKE CONCAT('%', #{searchKeyword}, '%')
					<if test="operatorId != null">
						AND grade = #{operatorId}
					</if>
					<if test="searchCircleId != null">
					  	AND O.circle_name = #{searchCircleId}
					</if>
				</if>
				<if test="searchColumn.equals('department')">
					AND department LIKE CONCAT('%', #{searchKeyword}, '%')
					<if test="operatorId != null">
						AND grade = #{operatorId}
					</if>
					<if test="searchCircleId != null">
					  	AND O.circle_name = #{searchCircleId}
					</if>
				</if>
			</when>
			<otherwise>
				<if test="operatorId != null">
					AND grade = #{operatorId}
				</if>
				<if test="searchCircleId != null">
				  	AND O.circle_name = #{searchCircleId}
				</if>
			</otherwise>
		</choose>
	</select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="String" >
    select 
    <include refid="Base_Column_List" />
    , (select circle.circle_id from operator operator inner join circle circle on operator.circle_name = circle.circle_name where operator.id = users.operator_id) AS circle_id
    , (select circle_name from operator where id = users.operator_id) AS circle_name
    , (select name from grade where id = users.grade) AS grade_name
    from users
    where user_id = #{userId}
  </select>
  
	<delete id="deleteUser" parameterType="com.catenoid.dashbd.dao.model.Users">
	    DELETE FROM users
	    WHERE user_id = #{userId}
	</delete>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.catenoid.dashbd.dao.model.UsersExample" >
    delete from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
	
	<insert id="insertUser" parameterType="com.catenoid.dashbd.dao.model.Users">
	    INSERT INTO users (user_id, operator_id, password, first_name, last_name, department, grade, memo, created_at, updated_at)
		VALUES (#{userId}, #{operatorId}, #{password}, #{firstName}, #{lastName}, #{department}, #{grade}, #{memo}, NOW(), NOW())
		ON DUPLICATE KEY UPDATE
		operator_id = #{operatorId}, password = #{password}, first_name = #{firstName}, last_name = #{lastName}, department = #{department}, 
		grade = #{grade}, memo = #{memo}, updated_at = NOW()
	</insert>
  
  <insert id="insert" parameterType="com.catenoid.dashbd.dao.model.Users" >
    insert into users (id, user_id, operator_id, password, 
      first_name, last_name, department, 
      permission, created_at, updated_at
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{operatorId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, 
      #{permission,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
    <selectKey resultType="int" keyProperty="id" order="AFTER"> 
         SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.catenoid.dashbd.dao.model.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="firstName != null" >
        first_name,
      </if>
      <if test="lastName != null" >
        last_name,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="permission != null" >
        permission,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null" >
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null" >
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        #{permission,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
    <selectKey resultType="int" keyProperty="id" order="AFTER"> 
         SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.catenoid.dashbd.dao.model.UsersExample" resultType="java.lang.Integer" >
    select count(*) from users
    <if test="_parameter != null" >
      <include refid="Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update users
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorId != null" >
        operator_id = #{record.operatorId,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.firstName != null" >
        first_name = #{record.firstName,jdbcType=VARCHAR},
      </if>
      <if test="record.lastName != null" >
        last_name = #{record.lastName,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.permission != null" >
        permission = #{record.permission,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>      
        updated_at = now(),
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update users
    set id = #{record.id,jdbcType=INTEGER}, 
      user_id = #{record.userId,jdbcType=VARCHAR},
      operator_id = #{record.operatorId,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      first_name = #{record.firstName,jdbcType=VARCHAR},
      last_name = #{record.lastName,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      permission = #{record.permission,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = now()
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.catenoid.dashbd.dao.model.Users" >
    update users
    <set >      
        operator_id = #{operatorId,jdbcType=INTEGER},
        grade = #{grade, jdbcType=INTEGER},
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null" >
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null" >
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        permission = #{permission,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>      
        updated_at = now(),
    </set>
    where 1=1
    <if test="id != 0">
    	and id = #{id,jdbcType=INTEGER}
    </if>  
    <if test="userId != null and userId != ''">
    	and user_id = #{userId}
    </if>
  </update>
  <update id="updateByPrimaryKey" parameterType="com.catenoid.dashbd.dao.model.Users" >
    update users
    set operator_id = #{operatorId,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectUserListInPermission" resultMap="BaseResultMap" parameterType="Map">
	    SELECT
	    	<include refid="Base_Column_List" />
    	FROM ( SELECT
				   @ROWNUM := @ROWNUM + 1 AS rownum,
				   <include refid="Base_Column_List" />
			   FROM ( SELECT @ROWNUM := 0 AS rownum) R,
					( SELECT
						 <include refid="Base_Column_List" />
					  FROM users
					  WHERE 1 = 1 
					  <if test="searchUserId != null">
					      AND user_id LIKE CONCAT('%', #{searchUserId}, '%')
					  </if>
					  <if test="searchOperatorId != null">
					      AND grade = #{searchOperatorId}
					  </if>
				   	  ORDER BY <if test="sort == null">user_id ASC</if>
					  		   <if test="sort != null">
								   <if test="sort == 'userId'">user_id</if>
								   <if test="sort == 'firstName'">first_name</if>
								   <if test="sort == 'lastName'">last_name</if>
								   <if test="sort == 'department'">department</if>
								   ${order}
						       </if> ) T
			  ) R
		WHERE rownum BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectUserListCountInPermission" resultType="Integer" parameterType="Map">
	    SELECT COUNT(*)
		FROM users
		WHERE 1 = 1 
		<if test="searchUserId != null">
			AND user_id LIKE CONCAT('%', #{searchUserId}, '%')
		</if>
		<if test="searchOperatorId != null">
			AND operator_id = #{searchOperatorId}
		</if>
	</select>
  
  
  <select id="selectPermissionAll" resultType="com.catenoid.dashbd.dao.model.Permission">
	  select
    	`id` AS `id`,
    	`role` AS `role`,
	    `name` AS `name`,
	    `description` AS `description`,
	    `created_at` AS `created_at`,
	    `updated_at` AS `updated_at`
    from permission P
    where id not in (7, 13)
  </select>
  
  <select id="selectTownFromCircle" parameterType="String" resultType="com.catenoid.dashbd.dao.model.Circle">
  	select
  		id, circle_name, town_name, town_code, latitude, longitude, description, permission, created_at as createdAt, updated_at as updatedAt 
	from operator where circle_name = #{circle_name}
  </select>
  
  <select id="selectPermissionsByUserId" resultType="com.catenoid.dashbd.dao.model.Permission" parameterType="String">
    select
    	P.`id` AS `id`,
    	P.`role` AS `role`,
	    P.`name` AS `name`,
	    P.`description` AS `description`,
	    P.`created_at` AS `created_at`,
	    P.`updated_at` AS `updated_at`
    from users_permission UP,
		 permission P
	where UP.permission_id = P.id
  	  and UP.user_id = #{userId}
  </select>
  
  <insert id="insertPermissionOfUser" parameterType="Map">
      INSERT INTO users_permission (`user_id`, `permission_id`, `created_at`, `updated_at`)
      VALUES
      		<foreach collection="itemList" item="item" separator=",">
      		    (#{item.userId}, #{item.permissionId}, NOW(), NOW())
			</foreach>
  </insert>
  
  <delete id="deletePermissionOfUser" parameterType="String">
      DELETE FROM users_permission
      WHERE user_id = #{userId}
  </delete>
  
  <insert id="insertSystemAjaxLog" parameterType="Map">
  	  INSERT INTO system_ajax_log (
      	req_type <if test="targetId != null and targetId != ''">, target_id</if>, req_sub_type,
      	<if test="reqUrl == 'scheduleReg.do'">service_type, service_class, service_id, said,</if>
      	req_url, req_code, req_msg, insert_at, created_at
      )
      VALUES (
      	#{reqType} <if test="targetId != null and targetId != ''">, #{targetId}</if>, #{reqSubType},
      	<if test="reqUrl == 'scheduleReg.do'">#{serviceType}, #{serviceClass}, #{serviceId}, #{said},</if> 
      	#{reqUrl}, #{reqCode}, #{reqMsg}, substring(now(), 1, 10), NOW()
      )
  </insert>
  
  <insert id="insertSystemInterFaceLog" parameterType="Map">
      INSERT INTO system_interface_log 
      	(method_bcid, method_bmsc_id, method_mode, method_transaction_id, method_service_type, method_fec_type, method_mpd_uri, method_file_uri, 
      	 method_bmsc_ip, method_name, method_service_id, method_said, method_code, insert_at, created_at)
      VALUES
      	(#{BCID}, #{bmscId}, #{methodMode}, #{transactionId}, #{serviceType}, #{fecType}, #{mpdURI}, #{fileURI}, 
      	 #{bmscIp}, #{name}, #{serviceId}, #{said}, #{methodCode}, DATE_FORMAT(NOW(), '%Y-%m-%d'), NOW())
  </insert>
  
  <select id="selectUserListByCondition" parameterType="HashMap" resultMap="BaseResultMap">
		SELECT id, user_id, operator_id, password, first_name, last_name								
			, department, grade, permission, memo, created_at, updated_at								
		FROM users
		WHERE 1=1
		<if test="grade != '' and grade != null">
			AND grade = #{grade}
		</if>  
		<if test="operatorId != '' and operatorId != null">
			AND operator_id = #{operatorId}
		</if>
  </select>
  
  <update id="initPassword" parameterType="HashMap">
  		UPDATE users
  		SET password = #{password}, status = #{status}, fail_cnt = 0
  		WHERE user_id = #{userId}
  </update>
  
  <update id="updateFailCnt" parameterType="HashMap">
  		UPDATE users
  		SET fail_cnt = fail_cnt+1
  		<if test="status != '' and status != null">
  			, status = #{status}
  		</if>
  		WHERE user_id = #{userId}
  </update>
  
  <select id="selectAutoBackupStatus" parameterType="HashMap" resultType="HashMap">
	select * from database_backup_time
  </select>
  
  <update id="updateAutoBackupYN" parameterType="String">
	update database_backup_time
	set auto_yn = #{autoYN}
  </update>
  
  <update id="updateBackupTime" parameterType="String">
	update database_backup_time
	set backup_time = #{backupTime}
  </update>
  
</mapper>