<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.catenoid.dashbd.dao.ScheduleMapper" >
	<select id="selectSchduleMaxPosition" parameterType="java.util.Map" resultType="Integer">
		SELECT IFNULL(MAX(depthPosition), 0) + 1 FROM  
		(
		   SELECT start_comp, end_comp,
		         (
		            SELECT count(*) FROM schedule s  
		            WHERE       
		            <include refid="schedule_where" />
		            <![CDATA[                  
		            AND start_comp > DATE_FORMAT(start_date, '%H%i%s')      
		            AND start_comp < DATE_FORMAT(end_date, '%H%i%s')
		            ]]>        
		         ) depthPosition
		   FROM
		   (
		      SELECT     
		         DATE_FORMAT(start_date, '%H%i%s') start_comp,     
		         DATE_FORMAT(end_date, '%H%i%s') end_comp      
		      FROM schedule s
		      WHERE         
		         <include refid="schedule_where" />         
		   ) x
		) a

	</select>
	
	<select id="selectSchdule" parameterType="java.util.Map" resultType="java.util.Map">
			SELECT ID
				, service_area_id
				, NAME
				, BCID
				, start_comp 
 				, end_comp
 				, (SELECT count(*) FROM schedule WHERE
				 	del_yn = 'N'
			    	<if test="serviceAreaId != null and serviceAreaId !=''" >
						AND service_area_id = #{serviceAreaId}
					</if>
					<if test="bmscId != null and bmscId !=''" >
						AND service_area_id in (SELECT service_area_id FROM bmsc_service_area WHERE bmsc_id = #{bmscId})
					</if>
					<if test="searchDate != null and searchDate !=''" >
						AND DATE_FORMAT(start_date , '%Y-%m-%d') = #{searchDate}
					</if> 
				<![CDATA[
 					AND start_comp > DATE_FORMAT(start_date, '%H%i%s') 
					AND start_comp < DATE_FORMAT(end_date, '%H%i%s')  
				]]>
 				  ) depthPosition
				, DATE_FORMAT(start_date, '%Y-%m-%dT%H:%i:%s') start_date
				, DATE_FORMAT(end_date, '%Y-%m-%dT%H:%i:%s') end_date
				
				, DATE_FORMAT(start_date , '%Y') start_year 
				, DATE_FORMAT(start_date , '%m') start_month
				, DATE_FORMAT(start_date , '%d') start_day
				, DATE_FORMAT(start_date , '%H') start_hour
				, DATE_FORMAT(start_date , '%i') start_mins
				, DATE_FORMAT(end_date , '%Y') end_year 
				, DATE_FORMAT(end_date , '%m') end_month
				, DATE_FORMAT(end_date , '%d') end_day
				, DATE_FORMAT(end_date , '%H') end_hour
				, DATE_FORMAT(end_date , '%i') end_mins
				, service
				, serviceId
			FROM 
			(
			SELECT     
		         DATE_FORMAT(s.start_date, '%H%i%s') start_comp,     
		         DATE_FORMAT(s.end_date, '%H%i%s') end_comp,
		         s.ID,
		         s.service_area_id,
				 s.NAME,
				 s.BCID,
				 s.start_date,
		         s.end_date,
		         b.service,
		         b.serviceId
		      FROM schedule s left join broadcast_info b on s.BCID = b.BCID
		      WHERE
			 	s.del_yn = 'N'
		    	<if test="serviceAreaId != null and serviceAreaId !=''" >
					AND s.service_area_id = #{serviceAreaId}
				</if>
				<if test="bmscId != null and bmscId !=''" >
					AND s.service_area_id in (SELECT service_area_id FROM bmsc_service_area WHERE bmsc_id = #{bmscId})
				</if>
				<if test="searchDate != null and searchDate !=''" >
					AND DATE_FORMAT(s.start_date , '%Y-%m-%d') = #{searchDate}
				</if> 
				<if test="serviceType != null and serviceType !=''" >
					AND b.service = #{serviceType}
				</if> 
				<if test="serviceClass != null and serviceClass !=''" >
					AND b.serviceClass = #{serviceClass}
				</if> 
			) x
 			order by start_date asc
	</select>
	
	<sql id="schedule_where" >
	 	del_yn = 'N'
    	<if test="serviceAreaId != null and serviceAreaId !=''" >
			AND service_area_id = #{serviceAreaId}
		</if>
		<if test="bmscId != null and bmscId !=''" >
			AND service_area_id in (SELECT service_area_id FROM bmsc_service_area WHERE bmsc_id = #{bmscId})
		</if>
		<if test="searchDate != null and searchDate !=''" >
			AND DATE_FORMAT(start_date , '%Y-%m-%d') = #{searchDate}
		</if> 
  	</sql>
	
	<select id="selectSchduleContentURL" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT url
		FROM
		contents c, schedule s
		WHERE c.id = s.content_id
		AND s.id =#{id}
	</select>
	
	<select id="selectSchduleTime" parameterType="java.util.Map" resultType="java.util.Map">
			SELECT id
				, bmscId as bmscId
				, service_area_id as serviceAreaId
				, content_id as contentId
				, name
				, s.BCID
				, DATE_FORMAT(start_date, '%Y-%m-%d') searchDate
				, DATE_FORMAT(start_date, '%Y-%m-%d %H:%i:%s') start_date
				, DATE_FORMAT(end_date, '%Y-%m-%d %H:%i:%s') end_date

				, DATE_FORMAT(start_date , '%H') start_hour
				, DATE_FORMAT(start_date , '%i') start_mins
				, DATE_FORMAT(start_date , '%s') start_second
				

				, DATE_FORMAT(end_date , '%H') end_hour
				, DATE_FORMAT(end_date , '%i') end_mins
				, DATE_FORMAT(end_date , '%s') end_second
				, b.transactionId
				, b.serviceId
				, b.service
				, b.service_name
				, b.serviceClass
				, b.language
				, b.GBR
				, b.QCI
				, b.level
				, b.preEmptionCapabiity
				, b.preEmptionVulnerability
				, b.fecType
				, b.fecRatio
				, b.said
				, b.segmentAvailableOffset 
				, DATE_FORMAT(DATE_ADD(start_date, INTERVAL -15 SECOND) , '%Y-%m-%d %H:%i:%s') temp_start
				, DATE_FORMAT(DATE_ADD(end_date, INTERVAL 15 SECOND) , '%Y-%m-%d %H:%i:%s') temp_end
				, DATE_FORMAT(schedule_start, '%Y-%m-%d %H:%i:%s') schedule_start
				, DATE_FORMAT(schedule_stop, '%Y-%m-%d %H:%i:%s') schedule_stop
				, b.reportType
				, b.offsetTime
				, b.randomTime
				, b.fileURI
				, DATE_FORMAT(deliveryInfo_start, '%Y-%m-%d %H:%i:%s') deliveryInfo_start
				, DATE_FORMAT(deliveryInfo_end, '%Y-%m-%d %H:%i:%s') deliveryInfo_end
				, b.mpdURI
				, b.samplePercentage
			FROM schedule s 
			left join broadcast_info b on s.BCID = b.BCID
			WHERE 1=1
			AND id = #{id}
	</select>
	
	<insert id = "addScheduleWithInitContent" parameterType="java.util.Map">
		INSERT INTO schedule
			(bmscId,service_area_id, content_id, name, start_date, end_date)
		VALUES
			(#{bmscId}, #{serviceAreaId}, #{contentId}, #{titleName}
						, str_to_date(#{startTime}, '%Y%m%d%H%i%s')
						, str_to_date(#{endTime}, '%Y%m%d%H%i%s')
				
			)
	</insert>
	
	<update id = "modifyScheduleTime" parameterType="java.util.Map">
		UPDATE schedule	SET
			start_date = #{startTime} 
			, end_date = #{endTime}
			, updated_at = now()
		WHERE id = #{scheduleId}
	</update>
		
	<insert id = "insertBroadcastInfo" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="BCID">
		INSERT INTO broadcast_info(transactionId
			, serviceId 
			, service
			, service_name
			, serviceClass
			, language
			, GBR
			, QCI
			, level
			, preEmptionCapabiity
			, preEmptionVulnerability
			, fecType
			, fecRatio
			, segmentAvailableOffset
			, said
			, schedule_start
			, schedule_stop
			, reportType
			, offsetTime
			, randomTime
			, fileURI
			, deliveryInfo_start
			, deliveryInfo_end
			, mpdURI
			, samplePercentage
		)VALUES(#{transactionId}
			, #{serviceId}
			, #{serviceType}
			, #{name}
			, #{serviceClass}
			, #{serviceLanguage}
			, #{GBR}
			, #{QCI}
			, #{level}
			, #{preEmptionCapabiity}
			, #{preEmptionVulnerability}
			, #{fecType}
			, #{fecRatio}
			, #{segmentAvailableOffset}
			, #{serviceAreaId}
			, str_to_date(#{schedule_start}, '%Y%m%d%H%i%s')
			, str_to_date(#{schedule_stop}, '%Y%m%d%H%i%s')
			, #{reportType}
			, #{offsetTime}
			, #{randomTime}
			, #{fileURI}
			, str_to_date(#{deliveryInfo_start}, '%Y%m%d%H%i%s')
			, str_to_date(#{deliveryInfo_end}, '%Y%m%d%H%i%s')
			, #{mpdURI}
			, #{samplePercentage}
		)
	</insert>
	<update id="updateBroadcastInfo" parameterType="java.util.Map">
		UPDATE broadcast_info SET
			updated_at = now()
			, transactionId		= #{transactionId}
			<if test="name != null and name !=''" >
				, service_name 		= #{name}
			</if>
			<if test="serviceClass != null and serviceClass !=''" >
			, serviceClass 		= #{serviceClass}
			</if>
			<if test="serviceLanguage != null and serviceLanguage !=''" >
			, language			= #{serviceLanguage}
			</if>	 
			<if test="GBR != null and GBR !=''" >
				, GBR				= #{GBR}
			</if> 
			<if test="QCI != null and QCI !=''" >
				, QCI				= #{QCI}
			</if>
			<if test="level != null and level !=''" >
				, level				= #{level}
			</if>
			<if test="preEmptionCapabiity != null and preEmptionCapabiity !=''" >
				, preEmptionCapabiity		=#{preEmptionCapabiity}
			</if>
			<if test="preEmptionVulnerability != null and preEmptionVulnerability !=''" >
				, preEmptionVulnerability	=#{preEmptionVulnerability}
			</if>
			<if test="fecType != null and fecType !=''" >
				, fecType			= #{fecType}
			</if>
			<if test="fecRatio != null and fecRatio !=''" >
				, fecRatio			= #{fecRatio}
			</if>
			<if test="segmentAvailableOffset != null and segmentAvailableOffset !=''" >
				, segmentAvailableOffset	=#{segmentAvailableOffset}
			</if>
			<if test="said != null and said !=''" >
				, said				= #{said}
			</if>
			<if test="schedule_start != null and schedule_start !=''" >
				, schedule_start	= str_to_date(#{schedule_start}, '%Y%m%d%H%i%s')
			</if>
			<if test="schedule_stop != null and schedule_stop !=''" >
				, schedule_stop		= str_to_date(#{schedule_stop}, '%Y%m%d%H%i%s')
			</if>
			<if test="reportType != null and reportType !=''" >
				, reportType		= #{reportType}
			</if>
			<if test="offsetTime != null and offsetTime !=''" >
				, offsetTime		= #{offsetTime}
			</if>
			<if test="randomTime != null and randomTime !=''" >
				, randomTime		= #{randomTime}
			</if>
			<if test="fileURI != null and fileURI !=''" >
				, fileURI			= #{fileURI}
			</if>
			<if test="deliveryInfo_start != null and deliveryInfo_start !=''" >
				, deliveryInfo_start= str_to_date(#{deliveryInfo_start}, '%Y%m%d%H%i%s')
			</if>
			<if test="deliveryInfo_end != null and deliveryInfo_end !=''" >
				, deliveryInfo_end	= str_to_date(#{deliveryInfo_end}, '%Y%m%d%H%i%s')
			</if>
			<if test="mpdURI != null and mpdURI !=''" >
				, mpdURI			= #{mpdURI}
			</if>
			<if test="samplePercentage != null and samplePercentage !=''" >
				, samplePercentage	= #{samplePercentage} 
			</if>
		WHERE 1=1
		AND BCID = #{BCID}
	</update>
	
	<select id="selectBroadcast" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
			BCID
			, serviceId
			, service_name 		as name
			, transactionId		
			, serviceClass 			 
			, language			as serviceLanguage 
			, GBR	
			, QCI	
			, level	
			, preEmptionCapabiity	
			, preEmptionVulnerability
			, fecType			
			, fecRatio			
			, segmentAvailableOffset
			, said				
			, DATE_FORMAT(schedule_start, '%Y%m%d%H%i%s') schedule_start
			, DATE_FORMAT(schedule_stop,  '%Y%m%d%H%i%s') schedule_stop
			, reportType		
			, offsetTime	
			, randomTime	
			, fileURI	
			, DATE_FORMAT(deliveryInfo_start, '%Y%m%d%H%i%s') deliveryInfo_start
			, DATE_FORMAT(deliveryInfo_end,   '%Y%m%d%H%i%s') deliveryInfo_end	
			, mpdURI			
			, samplePercentage	 
		FROM broadcast_info 
		WHERE 1=1
		AND BCID = #{BCID}
	</select>
	
	<select id="selectBroadcastToday" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
			BCID
			, serviceId
			, service_name 		as name
			, transactionId		
			, serviceClass 			 
			, language			as serviceLanguage 
			, GBR	
			, QCI	
			, level	
			, preEmptionCapabiity	
			, preEmptionVulnerability
			, fecType			
			, fecRatio			
			, segmentAvailableOffset
			, said				
			, DATE_FORMAT(schedule_start, '%Y%m%d%H%i%s') schedule_start
			, DATE_FORMAT(schedule_stop,  '%Y%m%d%H%i%s') schedule_stop
			, reportType		
			, offsetTime	
			, randomTime	
			, fileURI	
			, DATE_FORMAT(deliveryInfo_start, '%Y%m%d%H%i%s') deliveryInfo_start
			, DATE_FORMAT(deliveryInfo_end,   '%Y%m%d%H%i%s') deliveryInfo_end	
			, mpdURI			
			, samplePercentage	 
		FROM broadcast_info 
		WHERE schedule_start > #{searchDate}
	</select>
	
	<update id = "updateSchedule" parameterType="java.util.Map">
		UPDATE schedule	SET
			service_area_id = #{serviceAreaId},
			BCID = #{BCID},
			updated_at = now()
		WHERE id = #{id}
	</update>
	
	<insert id="insertAddSchedule" parameterType="java.util.Map">
		INSERT INTO schedule(bmscId, service_area_id, content_id, BCID, name, start_date, end_date)
		SELECT bmscId, #{serviceAreaId}, content_id, BCID, name, start_date, end_date 
		FROM  schedule 
		WHERE id =#{id}
	</insert>
	
	<insert id="insertScheduleContent" parameterType="java.util.Map">
		INSERT INTO schedule_contents
		(
			schedule_id, content_id, cancelled, changed, start_time, end_time, created_at, updated_at
		)
		values
		(
			${scheduleId}, ${contentId}, 0, 0, #{startTime}, #{endTime}, now(), now() 
		)
	</insert>
	
	<update id = "updateSchedule4Del" parameterType="java.util.Map">
		UPDATE schedule	SET
			del_yn = 'Y',
			updated_at = now() 
		WHERE id = #{id}
	</update>
	
	<select id="selectGBRSum" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT IFNULL(sum(GBR), '0') as GBRSum FROM 
		schedule s inner join broadcast_info b
		ON (s.BCID = b.BCID)
		WHERE 1=1
	<![CDATA[
		AND DATE_FORMAT(now(), '%Y%m%d%H%i%s') > DATE_FORMAT(s.start_date, '%Y%m%d%H%i%s')
		AND DATE_FORMAT(now(), '%Y%m%d%H%i%s') < DATE_FORMAT(s.end_date, '%Y%m%d%H%i%s')
	]]>
		AND service_area_id = #{serviceAreaId} 	
	
	</select>
<!--  inbo 작성 쿼리 끝  -->

	<select id="checkBandwidth" parameterType="java.util.Map" resultType="java.util.Map">
		select said, bandwidth from 
		(
			select circle_id as said, bandwidth from circle
			where circle_id IN (${saidList})
			
			union all
			
			select city_id as said, bandwidth from city
			where city_id IN (${saidList})
			
			union all
			
			select hotspot_id as said, bandwidth from hotspot 
			where hotspot_id IN (${saidList})
		) T
	</select>
	
	<select id="getGroupListFromCircleId" parameterType="HashMap" resultType="HashMap">
		select * from service_area_group
		where circle_id = #{circleId}
	</select>
	
	<select id="getGroupSaidList" parameterType="HashMap" resultType="HashMap">
		select * from service_area_group_sub
		where group_id = #{cityId}
	</select>
	
	<select id="checkExistSaid" parameterType="java.util.Map" resultType="int">
		select count(*) from 
		(
			select circle_id as said, bandwidth from circle
			where circle_id = ${said}
			
			union all
			
			select city_id as said, bandwidth from city
			where city_id = ${said}
			
			union all
			
			select hotspot_id as said, bandwidth from hotspot 
			where hotspot_id = ${said}
		) T
	</select>


  <resultMap id="BaseResultMap" type="com.catenoid.dashbd.dao.model.Schedule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, start_date, end_date, created_at, updated_at
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.catenoid.dashbd.dao.model.ScheduleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from schedule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.catenoid.dashbd.dao.model.ScheduleExample" >
    delete from schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.catenoid.dashbd.dao.model.Schedule" >
    insert into schedule (id, name, start_date, end_date, 
      created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP},
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.catenoid.dashbd.dao.model.Schedule" >
    insert into schedule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.catenoid.dashbd.dao.model.ScheduleExample" resultType="java.lang.Integer" >
    select count(*) from schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update schedule
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update schedule
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.catenoid.dashbd.dao.model.Schedule" >
    update schedule
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.catenoid.dashbd.dao.model.Schedule" >
    update schedule
    set name = #{name,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>