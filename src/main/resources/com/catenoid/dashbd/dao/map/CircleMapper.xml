<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.catenoid.dashbd.dao.CircleMapper" >

	<select id="selectCity" parameterType="HashMap" resultType="HashMap">
		SELECT 
			city_id, circle_name, city_name, city_code, latitude, longitude, description, bandwidth, created_at as createdAt, updated_at as updatedAt
		FROM city
	</select>

	<select id="checkSAID" parameterType="String" resultType="int">
		select count(*) from 
		(
			SELECT circle_id
					FROM circle
					where circle_id = #{checkSAID}
			union all
			SELECT city_id
					FROM city
					where city_id = #{checkSAID}
			union all
			SELECT hotspot_id
					FROM hotspot
					where hotspot_id = #{checkSAID}
		) T
	</select>

	<select id="checkCircleExist" parameterType="String" resultType="int">
		SELECT count(*)			
		FROM circle
		where circle_name = #{circleName}
	</select>

	<insert id="insertCity" parameterType="HashMap">
		INSERT INTO city (<if test="cityId != null">city_id,</if>circle_id, circle_name, city_name, description, latitude, longitude, bandwidth, created_at, updated_at) 
		VALUES (<if test="cityId != null">#{cityId},</if>#{circleName}, #{circleName}, ${latitude}, ${longitude}, NOW(), NOW())
		ON DUPLICATE KEY UPDATE
		circle_name = #{circleName}, description = #{circleName}, latitude = ${latitude}, longitude = ${longitude}, updated_at = NOW()
	</insert>

	<insert id="insertCircle" parameterType="HashMap">
		INSERT INTO circle (<if test="circleId != null">circle_id,</if>circle_name, description, latitude, longitude, created_at, updated_at) 
		VALUES (<if test="circleId != null">#{circleId},</if>#{circleName}, #{circleName}, ${latitude}, ${longitude}, NOW(), NOW())
		ON DUPLICATE KEY UPDATE
		circle_name = #{circleName}, description = #{circleName}, latitude = ${latitude}, longitude = ${longitude}, updated_at = NOW()
	</insert>

	<delete id="deleteCircle" parameterType="String">
		DELETE FROM circle
		where circle_id = #{circleId}
	</delete>
	
</mapper>